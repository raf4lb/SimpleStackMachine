; def incr(i, n):
;     if i == n:
;         return i
;     else:
;         return incr(i+1, n)
;
; print(f"result: {incr(1, 10)}")

CONST ret STRING "%u\n"

fn .main
    PUSHL_U16 10
    PUSHL_U16 1
    CALL .incr
    PUSHL_U16 $ret
    SYSCALL 0
    RETURN

fn .incr
    PUSHL_U16 2
    ALLOC_LOCAL $i
    PUSHL_U16 2
    PUSHL_U16 $i
    POP_LOCAL
    PUSHL_U16 2
    ALLOC_LOCAL $n
    PUSHL_U16 2
    PUSHL_U16 $n
    POP_LOCAL
    PUSHL_U16 2
    PUSHL_U16 $n
    PUSH_LOCAL
    PUSHL_U16 2
    PUSHL_U16 $i
    PUSH_LOCAL
    COMPARE_EQ
    POP_JUMP_IF_FALSE .call_incr
    PUSHL_U16 2
    PUSHL_U16 $i
    PUSH_LOCAL
    RETURN
    .call_incr
        PUSHL_U16 2
        PUSHL_U16 $n
        PUSH_LOCAL
        PUSHL_U16 2
        PUSHL_U16 $i
        PUSH_LOCAL
        PUSHL_U16 1
        ADD_U16
        CALL .incr
        RETURN
