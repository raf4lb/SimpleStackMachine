fn .main
    ALLOC_LOCAL 2 $a    ; a
    PUSHL_U16 0
    POP_LOCAL 2 $a
    
    ALLOC_LOCAL 2 $b    ; b
    PUSHL_U16 1
    POP_LOCAL 2 $b
    
    ALLOC_LOCAL 2 $c    ; c
    ALLOC_LOCAL 2 $i    ; i

    ALLOC_LOCAL 2 $n    ; n
    PUSHL_U16 24        ; n here
    POP_LOCAL 2 $n

    PUSH_LOCAL 2 $n
    PUSHL_U16 1
    COMPARE_GE
    POP_JUMP_IF_FALSE .false_1
    PUSH_LOCAL 2 $a
    TOP_U16
    .false_1
    PUSH_LOCAL 2 $n
    PUSHL_U16 2
    COMPARE_GE
    POP_JUMP_IF_FALSE .false_2
    PUSH_LOCAL 2 $b
    TOP_U16
    .false_2
    PUSHL_U16 3
    POP_LOCAL 2 $i
    ALLOC_LOCAL 2 $inc ; inc
    PUSHL_U16 1
    POP_LOCAL 2 $inc
    .for
        ; for content
        PUSH_LOCAL 2 $a
        PUSH_LOCAL 2 $b
        ADD_U16
        TOP_U16
        POP_LOCAL 2 $c
        PUSH_LOCAL 2 $b
        POP_LOCAL 2 $a
        PUSH_LOCAL 2 $c
        POP_LOCAL 2 $b

        ; for increment
        PUSH_LOCAL 2 $i
        PUSH_LOCAL 2 $inc
        ADD_U16
        POP_LOCAL 2 $i

        ; check for condition
        PUSH_LOCAL 2 $i
        PUSH_LOCAL 2 $n
        COMPARE_GT
        POP_JUMP_IF_FALSE .for
        HALT
